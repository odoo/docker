<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <!-- Tags: Remove -->

        <record id="ir_actions_server_tag_remove_draft" model="ir.actions.server" forcecreate="0">
            <field name="name">Remove Tag Draft</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">7</field> <!-- Higher than the sequence of "_code" checks -->
            <field name="state">object_write</field>
            <field name="update_m2m_operation">remove</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_draft"/>
        </record>

        <record id="ir_actions_server_tag_remove_to_validate" model="ir.actions.server" forcecreate="0">
            <field name="name">Remove Tag To Validate</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">7</field> <!-- Higher than the sequence of "_code" checks -->
            <field name="state">object_write</field>
            <field name="update_m2m_operation">remove</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_to_validate"/>
        </record>

        <record id="ir_actions_server_tag_remove_validated" model="ir.actions.server" forcecreate="0">
            <field name="name">Remove Tag Validated</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">7</field> <!-- Higher than the sequence of "_code" checks -->
            <field name="state">object_write</field>
            <field name="update_m2m_operation">remove</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_validated"/>
        </record>

        <record id="ir_actions_server_tag_remove_deprecated" model="ir.actions.server" forcecreate="0">
            <field name="name">Deprecate</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">7</field> <!-- Higher than the sequence of "_code" checks -->
            <field name="state">object_write</field>
            <field name="update_m2m_operation">remove</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_deprecated"/>
        </record>

        <!-- Tags: Add -->
        <record id="ir_actions_server_tag_add_draft" model="ir.actions.server" forcecreate="0">
            <field name="name">Add Tag Draft</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">10</field> <!-- Higher than the "remove" counterpart -->
            <field name="state">object_write</field>
            <field name="update_m2m_operation">add</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_draft"/>
        </record>

        <record id="ir_actions_server_tag_add_to_validate" model="ir.actions.server" forcecreate="0">
            <field name="name">Add Tag To Validate</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">10</field> <!-- Higher than the "remove" counterpart -->
            <field name="state">object_write</field>
            <field name="update_m2m_operation">add</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_to_validate"/>
        </record>

        <record id="ir_actions_server_tag_add_validated" model="ir.actions.server" forcecreate="0">
            <field name="name">Add Tag Validated</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">10</field> <!-- Higher than the "remove" counterpart -->
            <field name="state">object_write</field>
            <field name="update_m2m_operation">add</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_validated"/>
        </record>

        <record id="ir_actions_server_tag_add_deprecated" model="ir.actions.server" forcecreate="0">
            <field name="name">Deprecate</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">10</field> <!-- Higher than the "remove" counterpart -->
            <field name="state">object_write</field>
            <field name="sequence">1000</field>
            <field name="update_m2m_operation">add</field>
            <field name="update_path">tag_ids</field>
            <field name="resource_ref" ref="documents.documents_tag_deprecated"/>
        </record>

        <!-- Create a Task -->
        <record id="ir_actions_server_create_a_task_code" model="ir.actions.server" forcecreate="0">
            <field name="name">Create a Task</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="state">code</field>
            <field name="code">action = records.action_create_project_task()</field>
        </record>

        <record id="ir_actions_server_create_project_task" model="ir.actions.server" forcecreate="0">
            <field name="name">Create a Task</field>
            <field name="sequence">3</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="usage">ir_actions_server</field>
            <field name="state">multi</field>
            <field name="child_ids" eval="[
                ref('documents_project.ir_actions_server_create_a_task_code'),
                ref('documents.ir_actions_server_remove_tags'),
                ref('documents_project.ir_actions_server_tag_add_to_validate'),
                ref('documents.ir_actions_server_create_activity'),
            ]"/>
        </record>

        <!-- Deprecate -->
        <record id="ir_actions_server_deprecate_code" model="ir.actions.server" forcecreate="0">
            <field name="name">Deprecate - Check conditions</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">5</field> <!-- Less than the sequence of tag_remove_ -->
            <field name="state">code</field>
            <field name="code">
tag_deprecated = env.ref('documents.documents_tag_deprecated', raise_if_not_found=False)
if tag_deprecated and tag_deprecated in records.tag_ids:
    raise UserError(env._("Impossible to mark documents as Deprecated twice."))
tag_draft = env.ref('documents.documents_tag_draft', raise_if_not_found=False)
if tag_draft and tag_draft in records.tag_ids:
    raise UserError(env._("Impossible to deprecate documents marked as Draft."))
            </field>
        </record>

        <record id="ir_actions_server_create_project_deprecate" model="ir.actions.server" forcecreate="0">
            <field name="name">Deprecate</field>
            <field name="sequence">25</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="usage">ir_actions_server</field>
            <field name="state">multi</field>
            <field name="child_ids" eval="[
                ref('documents_project.ir_actions_server_tag_remove_to_validate'),
                ref('documents_project.ir_actions_server_tag_remove_validated'),
                ref('documents_project.ir_actions_server_tag_remove_draft'),
                ref('documents_project.ir_actions_server_tag_add_deprecated'),
                ref('documents.ir_actions_server_remove_activities'),
            ]"/>
        </record>

        <!-- Mark As Draft -->
        <record id="ir_actions_server_mark_as_draft_code" model="ir.actions.server" forcecreate="0">
            <field name="name">Mark As Draft - Check conditions</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">5</field> <!-- Less than the sequence of tag_remove_ -->
            <field name="state">code</field>
            <field name="code">
tag_draft = env.ref('documents.documents_tag_draft', raise_if_not_found=False)
if tag_draft and tag_draft in records.tag_ids:
    raise UserError(env._("Impossible to mark documents as draft twice."))
tag_validated = env.ref('documents.documents_tag_validated', raise_if_not_found=False)
if tag_validated and tag_validated in records.tag_ids:
     # Easier than remembering not to remove activities
    raise UserError(env._("Impossible to mark validated documents as draft."))
            </field>
        </record>

        <record id="ir_actions_server_mark_as_draft" model="ir.actions.server" forcecreate="0">
            <field name="name">Mark as draft</field>
            <field name="sequence">10</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="usage">ir_actions_server</field>
            <field name="state">multi</field>
            <field name="child_ids" eval="[
                ref('documents_project.ir_actions_server_mark_as_draft_code'),
                ref('documents_project.ir_actions_server_tag_remove_to_validate'),
                ref('documents_project.ir_actions_server_tag_add_draft'),
                ref('documents.ir_actions_server_remove_activities'),
            ]"/>
        </record>

        <!-- Ask for validation -->
        <record id="ir_actions_server_ask_for_validation_code" model="ir.actions.server" forcecreate="0">
            <field name="name">Ask For Validation - Check conditions</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">5</field> <!-- Less than the sequence of tag_remove_ -->
            <field name="state">code</field>
            <field name="code">
tag_to_validate = env.ref('documents.documents_tag_to_validate', raise_if_not_found=False)
if tag_to_validate and tag_to_validate in records.tag_ids:
     # Easier than remembering not to remove activities
    raise UserError(env._("Impossible to ask for validation twice."))
tag_deprecated = env.ref('documents.documents_tag_to_validate', raise_if_not_found=False)
if tag_deprecated and tag_deprecated in records.tag_ids:
    raise UserError(env._("Impossible to ask for validation on documents tagged with Deprecated."))
            </field>
        </record>

        <record id="ir_actions_server_ask_for_validation" model="ir.actions.server" forcecreate="0">
            <field name="name">Ask for validation</field>
            <field name="sequence">15</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="usage">ir_actions_server</field>
            <field name="state">multi</field>
            <field name="child_ids" eval="[
                ref('documents_project.ir_actions_server_ask_for_validation_code'),
                ref('documents_project.ir_actions_server_tag_remove_validated'),
                ref('documents_project.ir_actions_server_tag_remove_draft'),
                ref('documents_project.ir_actions_server_tag_add_to_validate'),
                ref('documents.ir_actions_server_create_activity'),
            ]"/>
        </record>

        <!-- Validate -->
        <record id="ir_actions_server_validate_code" model="ir.actions.server" forcecreate="0">
            <field name="name">Validate - Check conditions</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="sequence">5</field> <!-- Less than the sequence of tag_remove_ -->
            <field name="state">code</field>
            <field name="code">
tag_validated = env.ref('documents.documents_tag_validated', raise_if_not_found=False)
if tag_validated and tag_validated in records.tag_ids:
    # Easier than remembering not to remove activities
    raise UserError(env._("Document has already been validated."))
tag_deprecated = env.ref('documents.documents_tag_deprecated', raise_if_not_found=False)
if tag_deprecated and tag_deprecated in records.tag_ids:
    raise UserError(env._("Impossible to validate documents tagged with Deprecated."))
            </field>
        </record>

        <record id="ir_actions_server_ask_validate" model="ir.actions.server" forcecreate="0">
            <field name="name">Validate</field>
            <field name="sequence">20</field>
            <field name="model_id" ref="documents.model_documents_document"/>
            <field name="groups_id" eval="[Command.link(ref('base.group_user'))]"/>
            <field name="usage">ir_actions_server</field>
            <field name="state">multi</field>
            <field name="child_ids" eval="[
                ref('documents_project.ir_actions_server_validate_code'),
                ref('documents_project.ir_actions_server_tag_remove_draft'),
                ref('documents_project.ir_actions_server_tag_remove_to_validate'),
                ref('documents_project.ir_actions_server_tag_add_validated'),
                ref('documents.ir_actions_server_remove_activities'),
            ]"/>
        </record>

    </data>
</odoo>
